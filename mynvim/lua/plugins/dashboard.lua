return {
	"nvimdev/dashboard-nvim",
	event = "VimEnter",
	dependencies = {
		{ "nvim-tree/nvim-web-devicons" },
		{ "ibhagwan/fzf-lua" },
		{ "folke/persistence.nvim" },
	},
	opts = function()
		local win_height = vim.api.nvim_win_get_height(0)
		local options_height = 20
		--local logo = [[
		--   ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗          Z
		--   ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║      Z
		--   ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║   z
		--   ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║ z
		--   ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║
		--   ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝
		-- ]]

		local logo = [[
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣗⣿⣿⣿⣿⣿⣿⣾⡯⢬⣵⣾⠻⣿⣿⣿⣿⣛⣯⣿⣿⣿⠿⠶⣯⣬⣶⠂⢀⠙⢺⣪⣷⡿⢿⣿⢿⣯⣙⢿⣿⣿⣿⣿⣿⡹⣿⣿⣿⣿⣶⣠⣝⡻⠦⠀⢸⣿⡁⠀⣿
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣟⣛⣿⣯⡿⣵⣁⢐⣛⣧⣶⣮⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢿⣷⣣⡆⢾⣿⠋⠁⠰⣴⣿⣫⢿⣿⣿⣿⣿⢿⣿⣿⣧⢹⣿⣿⣿⣿⣟⢿⣿⣶⡄⠘⠿⣿⡄⠈
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡽⣿⣻⣿⣷⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⢿⣿⣷⣶⣿⣿⣦⡏⠿⠽⣿⣷⣗⢔⢿⣿⡎⡽⣿⣿⣟⣛⣺⣻⢿⣷⣿⢿⣿⣿⣿⣿⢿⣿⣿⣤⡀⠻⠃⠀
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣫⣿⣿⣿⣿⣿⣯⣿⣿⣿⡿⣯⡽⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣷⢦⣿⢾⣷⣮⠫⢿⣿⡑⣹⣿⣿⣿⣿⣿⣿⣯⣝⠆⢿⣭⡿⣿⣏⣿⣿⣏⣷⡀⠀⠀
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⡟⣿⣻⣿⣿⣿⣿⡻⣿⣿⠿⠿⣟⠳⠁⣿⣹⣿⣿⡆⠀⢻⡇⣷⣪⢿⣿⣿⣿⣿⣿⣿⣷⣝⡿⡟⣿⣿⣾⣯⢞⢋⣷⡀⠀
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠈⣿⣿⣿⣿⡜⣏⣿⣿⣿⣿⣷⠨⡻⣼⣁⣤⣮⡇⢹⡸⣿⣿⣿⢀⠄⠷⢻⣧⣯⢿⣿⣿⣿⣿⣿⣿⣿⣿⣆⢿⣿⡎⣿⢏⢾⣿⡅⠀
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⣿⣿⣿⣿⣿⣿⣿⣿⢏⣿⣿⣿⣿⣛⣿⣿⣿⣿⣿⣠⢻⣿⣿⣿⣷⠸⣹⣿⣿⣿⣿⣧⢹⣿⣿⣿⠟⠀⠉⠁⣿⣿⣿⢸⡧⠀⢸⣿⡾⣋⢿⣿⣿⣿⣿⣿⣿⣿⣏⢠⠹⣷⢋⣾⣯⣼⡃⠀
       ⣙⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣾⢹⣿⣿⣿⣼⣷⣽⣿⣿⣿⣿⣿⡊⡿⢿⣿⣿⡇⠋⣿⣿⣿⠿⡙⡆⣿⠿⠁⠀⠀⠀⣴⠿⢛⠀⣾⣿⢐⠈⣿⣧⣷⡞⣿⣿⣿⣿⣿⣿⡿⣻⣍⢳⠈⢈⣿⣿⠇⡇⠀
       ⠿⢿⡟⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⢹⣿⢹⡿⣿⣿⣿⣿⣿⣿⣇⡿⣷⡸⢘⣿⣿⣿⢠⠿⣿⣷⣾⡇⠻⠀⠀⠀⠀⠀⠀⣀⡀⠉⠕⠿⠗⠀⠀⣿⣿⡽⣶⢹⣿⣿⣿⣿⢙⡿⣿⣿⡌⣗⢸⣿⢋⣼⣇⠺
       ⣿⣼⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⡏⢸⡟⣼⠀⠿⡽⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣆⣽⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⣰⡿⠃⠀⡀⠘⢣⠀⠀⢸⡿⣷⣿⢀⣿⣿⣿⣿⣟⡷⣗⣿⡏⣦⠈⡅⣼⢟⡅⠀
       ⣿⣿⣿⣇⡨⢿⣿⣯⣽⣿⣿⣿⣿⣿⣿⣿⣿⡏⣿⡇⡏⡇⢹⢀⣿⢻⣾⣿⣿⣧⣼⠟⢋⡉⠉⠉⠛⠻⣿⢹⣿⣿⣿⠄⠀⠀⠀⠐⠠⠚⠋⠀⠀⢠⡇⠀⣿⣆⠀⢸⢣⠛⣘⣴⣿⣿⣿⣏⣵⡿⣿⣩⡇⢈⠀⢻⣯⠧⣸⠇
       ⡿⠋⢻⣿⣷⢻⠋⢻⣿⣿⣿⣯⠿⣿⣿⣿⣿⣿⢿⣷⣧⠁⠘⡄⠿⠧⣉⢿⣭⣽⣿⣷⣿⡅⠀⠀⠢⢠⣿⣿⣟⣿⢶⠀⣞⣷⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⢻⣿⠀⡿⠸⠀⠘⣿⣿⠟⢛⣿⢿⣻⣩⣼⣵⠺⠆⠀⣿⠈⡍⠀
       ⣿⣶⡌⢿⣟⡲⣶⡀⠁⠹⣿⣿⣶⣽⣿⣿⢿⢿⣛⣿⣾⡤⠀⠠⠐⣇⠈⢿⣿⣿⣿⣿⣿⣷⣿⣿⣵⣿⣧⡟⡜⠀⣧⢀⠉⣿⠀⠀⠀⠀⣧⡄⠀⢸⡏⣀⣿⡟⣴⠃⠋⢠⠀⣿⢄⣤⣾⣿⣿⣿⣿⣿⣧⣽⡆⢰⡿⣃⣀⣀
       ⣿⣿⣿⣿⣷⣶⣿⣦⠀⠀⠙⠻⣿⡗⢸⣿⣯⣿⣿⣟⣿⣯⡀⠀⠀⢺⣾⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠎⡜⠀⠀⠄⣼⡞⠁⠀⠀⠀⡄⣿⡇⡀⢘⢄⡽⢋⢴⠏⠀⠀⣸⢰⣷⣻⡑⠉⢀⣸⣹⣿⣿⠛⢏⠋⠀⠀⣿⣿⣶
       ⢟⣥⢾⣿⣿⡿⣿⠋⠀⠆⢠⣾⣿⣧⠸⠿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡴⠏⠀⠀⠀⠂⠁⠀⠀⠀⡆⢰⣧⡟⠾⢮⡓⣾⡛⠁⠁⠀⣠⢴⡿⣹⣿⣿⣶⣾⡙⣿⣿⣿⠃⠀⠈⣔⣡⣾⡿⣿⡏
       ⣝⠀⠀⡈⠁⠁⠀⠀⢀⠀⠙⣿⠿⠏⢀⡠⢞⡛⢟⣿⣶⢦⡺⡷⢢⢄⠹⣿⣿⣛⣿⣿⣿⣿⣿⣿⣿⣮⡆⠀⣠⢡⠀⠀⠀⠀⠀⢠⣿⢿⠁⢀⠀⠁⣯⣭⣥⠀⠀⣻⣿⣾⣿⣿⣿⣿⡿⣿⠹⣟⠋⠀⣥⣲⠛⠉⠉⠙⠋⢁
       ⣤⣕⣼⣮⣼⣆⣦⣤⣀⢀⣰⢶⢦⡿⣿⢾⣾⡿⣿⣿⣿⣿⣿⡇⣠⢿⣆⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣴⣣⡿⠀⠘⣄⠀⠀⣸⣏⣿⢠⠸⣗⢀⠻⢟⠅⢀⣾⣿⣿⣿⣿⣭⣿⢶⡿⠶⣥⠐⢾⣿⣷⠏⢆⣀⠀⣀⣴⣾
       ⣭⣽⠷⠶⠿⢽⣿⠟⠛⠋⣋⣉⣩⣭⣍⠙⠌⣼⣿⣿⣿⣿⣿⣏⣼⠜⣿⣮⠀⠈⠿⢿⣿⣻⡭⠘⣿⢏⣾⣷⡿⡿⢀⣚⠃⠀⠠⣿⣴⢹⡸⣷⡈⠍⠛⠋⣠⣾⣿⣿⣿⣿⣿⡍⣭⠬⢷⣤⣤⣤⣌⠰⡕⠘⠮⠛⠛⠩⠭⠷
       ⢉⠄⣀⣀⣤⣤⡤⣤⣶⣿⣿⣿⣿⣿⡿⠀⠀⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⣼⣿⣿⡇⢀⢈⢾⣿⣿⣽⣑⣾⣿⠆⡠⠀⠘⠌⢸⡇⣿⡜⣦⡀⢻⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣧⡷⠋⠂⠁⢴⣿⠙⠁⠀⠀⠀
       ⣴⣿⣿⣿⣿⠿⠇⣛⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⢿⡇⠀⠀⢿⣿⣿⡃⢂⣞⣿⡯⣻⢳⣾⠿⠃⠐⠁⢃⠠⠀⢸⡇⣿⣿⢸⣧⠘⣿⣿⣿⣿⣿⣿⣭⣽⢻⣿⣿⡟⠉⠀⣀⣠⣴⣾⣿⣗⣀⣀⠀⠀
       ⡲⠄⠀⠀⠐⠀⣀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡇⠘⠁⠀⢠⣾⣿⢏⢏⢂⣿⢟⡿⣱⡻⠥⡶⣦⣭⡠⠬⠁⠀⢸⡁⢿⣿⣇⣿⣦⠿⡙⠟⣿⣷⣿⡿⠟⠘⠋⠂⠀⠀⢠⣼⣯⣽⣛⠿⣿⣯⡄⠀⠀
       ⣭⣀⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢡⠀⠀⢨⢮⣿⡣⠃⣀⠜⣑⣩⣄⣥⣼⣵⣦⣀⡀⢀⣠⠀⠀⠘⡇⣸⣿⣿⣸⣷⡞⣶⢶⣺⢿⣿⣿⣯⣴⣲⠀⣈⡄⢩⣻⡿⠿⠿⠀⠀⠀⠀⠀⠀
       ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡽⠀⠣⡄⢚⣾⣓⡤⢪⣴⡽⣷⣿⣿⣿⣿⣿⣿⣿⣏⢸⠏⠑⠁⠀⣟⠃⣿⣿⣇⣿⡾⣹⣿⣿⢻⣿⣿⣿⣯⣽⣷⣶⣿⣷⡾⠥⠒⠀⠀⢀⡴⢦⣠⣔



      ]]
		--      header =[[
		--
		--
		--⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⢿⣯⣤⣤⣭⣭⣭⣭⣭⡭⠍⢉⠉⠭⠙⠛⠋⠉⠉⣉⠉⠉⠉⠉⠛⠛⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⠿⠟⠛⠛⠛⠛⠛⠛⠛⠛⢛⣛⣉⠉⠉⠉⠛⣯⣭⣥⣀⣀⣀⣠⣤⣾⣿⣿⣿⠿⠿⠛⠉⠁⠀⠈⣀⣀⣀⣀⣤⡴⠚⠋⡉⠀⠲⣶⣿⣿⣿⣷⣶⣶⣍⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⣿⣿⣿⣿⣿⣯⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠑⢝⠿⣿⣛⠛⠛⠛⠂⠀⠐⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⡿⠁⠀⣴⣿⣟⠀⠀⠹⣿⣿⣟⠻⣿⣿⣿⣿⣦⣙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣊⣔⣲⣶⣦⣤⣄⣀⡀⠀⠀⠀⠀⠻⠿⣿⣿⣿⣿⣇⠀⠸⢿⣿⣾⣷⠀⠀⠹⣿⣿⣿⣗⣞⣿⣿⣿⣿⣷⣝⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⣿⣿⡿⢿⣿⣿⣯⣷⠄⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣿⣿⢿⣿⣿⣿⣷⣶⣶⣶⣶⣤⣤⣭⣉⣉⣒⣀⠠⠬⠭⣀⣀⣀⡹⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠙⢿⠉⠉⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⠉⠙⠃⠀⠈⠉⠔⠁⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠼⠄⠀⠀⠀⠄⠀⠀⠀⢀⣤⠀⠀⢀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣟⣭⣍⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣿⣷⡽⣿⣶⣶⣾⣯⣭⣭⡝⠛⠛⣃⠠⠰⢶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
		--⠀⠀⠀⠀⠀⡌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⠃⢄⠄⠀⠀⠀⣿⠰⣢⡋⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⡈⢯⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡩⣿⣿⣻⣿⣿⣿⡃⠀⣀⣄⣀⣻⣿⣻⣿⣿⠿⠿⢿⣿⣿⣿⣟⡈⣿⣿⣿⣿⣿⣿
		--⠀⠂⠀⠀⣰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠦⠀⠀⠀⠀⠀⠙⠢⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠸⠀⢹⣿⣿⠿⠟⠛⠿⢿⣿⣿⣿⣿⣿⣷⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡝⡖⠀⢈⣳⣿⣿⣭⡉⣿⣿⣿⣿⣿
		--⠀⠀⠀⢠⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠁⠠⠀⠀⠀⠀⠉⢿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣋⠐⠂⡿⠛⠙⠛⠁⠀⠀⠙⣿⣿⣿⣿
		--⠀⠀⠐⣾⣿⣇⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣿⣿⡿⢁⠂⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣯⠙⠛⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠛⠋⠋⠄⣸⡇⠀⢠⠇⠀⠀⠀⡀⢸⣿⣿⣿
		--⣿⣶⣶⠏⠙⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢤⣤⠀⠘⠛⠛⠋⠹⣿⣿⠇⠀⠀⠀⠉⠙⠀⡞⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢀⣿⠇⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⣿
		--⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠋⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⣽⡟⠀⠀⠀⣆⠀⠀⢀⢀⠀⠀⠀⠉
		--⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⡀⢠⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠈⠃⠀⢘⢸⠀⠀⣤⣤
		--⣿⣿⠷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡂⢀⢠⠄⠀⠀⠀⡇⢸⠀⢀⣤⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣶⣶⣶⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⠸⢀⣀⣙⣛
		--⠿⠿⠿⠿⠤⠦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢀⠀⠈⠢⠀⠀⠀⠁⠸⠀⠈⣿⡄⠀⠒⠒⠋⠉⠉⠉⠉⠉⠁⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢔⡠⢁⣰⣦⡬⢤
		--⡺⠧⠡⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⠀⠀⠀⡀⢀⢇⠀⠀⣿⠗⠀⠀⠀⠤⠄⠀⠐⠒⠂⠀⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠁⠀⠀
		--⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⢀⠔⢁⢎⠂⠀⠀⢹⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠤⠴⠆⠀⠦⠰⠠⠄⠷⢛⠋⠳⠰⠖⠒
		--⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠩⣴⣮⠵⠁⠀⠀⠀⢸⣽⠇⠀⠀⠀⢠⣦⠤⢲⡱⣳⣿⣽⣿⣯⣿⣿⣿⣷⣶⣶⣶⣶⣾⢤⡄⠀⢀⠀⠀⠀
		--⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⢠⣄⢤⣄⣒⣀⣠⠬⠅⠉⠉⠉⠁⠉⠁⠘⠐⠀⠈⠀⠂⠀⠀⠀⠈⠈⠉⠀⠉⠀⠀⠀⠀⠀⠀
		--⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
		--
		--    ]]
		local logo_line_count = 0

		for _ in logo:gmatch("[^\n]+") do
			logo_line_count = logo_line_count + 1
		end

		local padding_lines = 0

		if options_height + logo_line_count >= win_height then
			logo = string.rep("\n", (win_height - options_height) / 2)
		else
			logo = string.rep("\n", (win_height - options_height - logo_line_count) / 2) .. logo
		end

		local opts = {
			theme = "doom",
			hide = {
				-- this is taken care of by lualine
				-- enabling this messes up the actual laststatus setting after loading a file
				statusline = false,
			},
			config = {
				header = vim.split(logo, "\n"),
        -- stylua: ignore
        center = {
          { action = 'FzfLua files', desc = " Find File", icon = " ", key = "f" },
          --{ action = "ene | startinsert",                              desc = " New File",        icon = " ", key = "n" },
          { action = 'FzfLua oldfiles', desc = " Recent Files", icon = " ", key = "r" },
          { action = 'FzfLua grep_project', desc = " Find Text", icon = " ", key = "c" },
          { action = function() _G.fzf_marks() end, desc = " Find Mark", icon = " ", key = "m" },
          { action = 'FzfLua files cwd=~/.config', desc = " Config", icon = " ", key = "C" },
          { action = 'lua require("persistence").load()', desc = " Restore Session", icon = " ", key = "s" },
          { action = 'Neorg workspace document', desc = " Neorg document", icon = " ", key = "n" },
          { action = "Lazy", desc = " Lazy", icon = "󰒲 ", key = "l" },
          { action = function() vim.api.nvim_input("<cmd>qa<cr>") end, desc = " Quit", icon = " ", key = "q" },
        },
				footer = function()
					local stats = require("lazy").stats()
					local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
					return { "⚡ Neovim loaded " .. stats.loaded .. "/" .. stats.count .. " plugins in " .. ms .. "ms" }
				end,
			},
		}

		for _, button in ipairs(opts.config.center) do
			button.desc = button.desc .. string.rep(" ", 43 - #button.desc)
			button.key_format = "  %s"
		end

		-- open dashboard after closing lazy
		--    if vim.o.filetype == "lazy" then
		--      vim.api.nvim_create_autocmd("WinClosed", {
		--        pattern = tostring(vim.api.nvim_get_current_win()),
		--        once = true,
		--        callback = function()
		--          vim.schedule(function()
		--            vim.api.nvim_exec_autocmds("UIEnter", { group = "dashboard" })
		--          end)
		--        end,
		--      })
		--    end

		return opts
	end,
}
